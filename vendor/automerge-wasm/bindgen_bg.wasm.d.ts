/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_automerge_free(a: number): void;
export function automerge_new(a: number, b: number, c: number): void;
export function automerge_clone(a: number, b: number, c: number, d: number): void;
export function automerge_fork(a: number, b: number, c: number, d: number): void;
export function automerge_forkAt(a: number, b: number, c: number, d: number, e: number): void;
export function automerge_free(a: number): void;
export function automerge_pendingOps(a: number): number;
export function automerge_commit(a: number, b: number, c: number, d: number, e: number): number;
export function automerge_merge(a: number, b: number, c: number): void;
export function automerge_rollback(a: number): number;
export function automerge_keys(a: number, b: number, c: number, d: number): void;
export function automerge_text(a: number, b: number, c: number, d: number): void;
export function automerge_splice(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function automerge_push(a: number, b: number, c: number, d: number, e: number): void;
export function automerge_pushObject(a: number, b: number, c: number, d: number): void;
export function automerge_insert(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function automerge_insertObject(a: number, b: number, c: number, d: number, e: number): void;
export function automerge_put(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function automerge_putObject(a: number, b: number, c: number, d: number, e: number): void;
export function automerge_increment(a: number, b: number, c: number, d: number, e: number): void;
export function automerge_get(a: number, b: number, c: number, d: number, e: number): void;
export function automerge_getAll(a: number, b: number, c: number, d: number, e: number): void;
export function automerge_enablePatches(a: number, b: number, c: number): void;
export function automerge_popPatches(a: number, b: number): void;
export function automerge_length(a: number, b: number, c: number, d: number): void;
export function automerge_delete(a: number, b: number, c: number, d: number): void;
export function automerge_save(a: number): number;
export function automerge_saveIncremental(a: number): number;
export function automerge_loadIncremental(a: number, b: number, c: number): void;
export function automerge_applyChanges(a: number, b: number, c: number): void;
export function automerge_getChanges(a: number, b: number, c: number): void;
export function automerge_getChangeByHash(a: number, b: number, c: number): void;
export function automerge_getChangesAdded(a: number, b: number, c: number): void;
export function automerge_getHeads(a: number): number;
export function automerge_getActorId(a: number, b: number): void;
export function automerge_getLastLocalChange(a: number, b: number): void;
export function automerge_dump(a: number): void;
export function automerge_getMissingDeps(a: number, b: number, c: number): void;
export function automerge_receiveSyncMessage(a: number, b: number, c: number, d: number): void;
export function automerge_generateSyncMessage(a: number, b: number, c: number): void;
export function automerge_toJS(a: number): number;
export function automerge_materialize(a: number, b: number, c: number, d: number): void;
export function create(a: number, b: number, c: number): void;
export function loadDoc(a: number, b: number, c: number, d: number): void;
export function encodeChange(a: number, b: number): void;
export function decodeChange(a: number, b: number): void;
export function initSyncState(): number;
export function importSyncState(a: number, b: number): void;
export function exportSyncState(a: number): number;
export function encodeSyncMessage(a: number, b: number): void;
export function decodeSyncMessage(a: number, b: number): void;
export function encodeSyncState(a: number, b: number): void;
export function decodeSyncState(a: number, b: number): void;
export function __wbg_syncstate_free(a: number): void;
export function syncstate_sharedHeads(a: number): number;
export function syncstate_lastSentHeads(a: number): number;
export function syncstate_set_lastSentHeads(a: number, b: number, c: number): void;
export function syncstate_set_sentHashes(a: number, b: number, c: number): void;
export function syncstate_clone(a: number): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
